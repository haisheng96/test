//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace UI.FolderServiceClient {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FolderInfo", Namespace="http://schemas.datacontract.org/2004/07/HuaweiSoftware.Folder.Entity")]
    public partial class FolderInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreateDateField;
        
        private int IDField;
        
        private string NameField;
        
        private int PIDField;
        
        private long SizeField;
        
        private int TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PID {
            get {
                return this.PIDField;
            }
            set {
                if ((this.PIDField.Equals(value) != true)) {
                    this.PIDField = value;
                    this.RaisePropertyChanged("PID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FolderServiceClient.IFolderWCF")]
    public interface IFolderWCF {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFolderWCF/SaveData", ReplyAction="http://tempuri.org/IFolderWCF/SaveDataResponse")]
        System.IAsyncResult BeginSaveData(string path, int pID, System.AsyncCallback callback, object asyncState);
        
        void EndSaveData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFolderWCF/LoadData", ReplyAction="http://tempuri.org/IFolderWCF/LoadDataResponse")]
        System.IAsyncResult BeginLoadData(int id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<UI.FolderServiceClient.FolderInfo> EndLoadData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFolderWCF/DeleteTable", ReplyAction="http://tempuri.org/IFolderWCF/DeleteTableResponse")]
        System.IAsyncResult BeginDeleteTable(System.AsyncCallback callback, object asyncState);
        
        void EndDeleteTable(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFolderWCFChannel : UI.FolderServiceClient.IFolderWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<UI.FolderServiceClient.FolderInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<UI.FolderServiceClient.FolderInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FolderWCFClient : System.ServiceModel.ClientBase<UI.FolderServiceClient.IFolderWCF>, UI.FolderServiceClient.IFolderWCF {
        
        private BeginOperationDelegate onBeginSaveDataDelegate;
        
        private EndOperationDelegate onEndSaveDataDelegate;
        
        private System.Threading.SendOrPostCallback onSaveDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadDataDelegate;
        
        private EndOperationDelegate onEndLoadDataDelegate;
        
        private System.Threading.SendOrPostCallback onLoadDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTableDelegate;
        
        private EndOperationDelegate onEndDeleteTableDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public FolderWCFClient() {
        }
        
        public FolderWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FolderWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FolderWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FolderWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveDataCompleted;
        
        public event System.EventHandler<LoadDataCompletedEventArgs> LoadDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteTableCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult UI.FolderServiceClient.IFolderWCF.BeginSaveData(string path, int pID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveData(path, pID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void UI.FolderServiceClient.IFolderWCF.EndSaveData(System.IAsyncResult result) {
            base.Channel.EndSaveData(result);
        }
        
        private System.IAsyncResult OnBeginSaveData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string path = ((string)(inValues[0]));
            int pID = ((int)(inValues[1]));
            return ((UI.FolderServiceClient.IFolderWCF)(this)).BeginSaveData(path, pID, callback, asyncState);
        }
        
        private object[] OnEndSaveData(System.IAsyncResult result) {
            ((UI.FolderServiceClient.IFolderWCF)(this)).EndSaveData(result);
            return null;
        }
        
        private void OnSaveDataCompleted(object state) {
            if ((this.SaveDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveDataAsync(string path, int pID) {
            this.SaveDataAsync(path, pID, null);
        }
        
        public void SaveDataAsync(string path, int pID, object userState) {
            if ((this.onBeginSaveDataDelegate == null)) {
                this.onBeginSaveDataDelegate = new BeginOperationDelegate(this.OnBeginSaveData);
            }
            if ((this.onEndSaveDataDelegate == null)) {
                this.onEndSaveDataDelegate = new EndOperationDelegate(this.OnEndSaveData);
            }
            if ((this.onSaveDataCompletedDelegate == null)) {
                this.onSaveDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveDataCompleted);
            }
            base.InvokeAsync(this.onBeginSaveDataDelegate, new object[] {
                        path,
                        pID}, this.onEndSaveDataDelegate, this.onSaveDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult UI.FolderServiceClient.IFolderWCF.BeginLoadData(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadData(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<UI.FolderServiceClient.FolderInfo> UI.FolderServiceClient.IFolderWCF.EndLoadData(System.IAsyncResult result) {
            return base.Channel.EndLoadData(result);
        }
        
        private System.IAsyncResult OnBeginLoadData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((UI.FolderServiceClient.IFolderWCF)(this)).BeginLoadData(id, callback, asyncState);
        }
        
        private object[] OnEndLoadData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<UI.FolderServiceClient.FolderInfo> retVal = ((UI.FolderServiceClient.IFolderWCF)(this)).EndLoadData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadDataCompleted(object state) {
            if ((this.LoadDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadDataCompleted(this, new LoadDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadDataAsync(int id) {
            this.LoadDataAsync(id, null);
        }
        
        public void LoadDataAsync(int id, object userState) {
            if ((this.onBeginLoadDataDelegate == null)) {
                this.onBeginLoadDataDelegate = new BeginOperationDelegate(this.OnBeginLoadData);
            }
            if ((this.onEndLoadDataDelegate == null)) {
                this.onEndLoadDataDelegate = new EndOperationDelegate(this.OnEndLoadData);
            }
            if ((this.onLoadDataCompletedDelegate == null)) {
                this.onLoadDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadDataCompleted);
            }
            base.InvokeAsync(this.onBeginLoadDataDelegate, new object[] {
                        id}, this.onEndLoadDataDelegate, this.onLoadDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult UI.FolderServiceClient.IFolderWCF.BeginDeleteTable(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTable(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void UI.FolderServiceClient.IFolderWCF.EndDeleteTable(System.IAsyncResult result) {
            base.Channel.EndDeleteTable(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((UI.FolderServiceClient.IFolderWCF)(this)).BeginDeleteTable(callback, asyncState);
        }
        
        private object[] OnEndDeleteTable(System.IAsyncResult result) {
            ((UI.FolderServiceClient.IFolderWCF)(this)).EndDeleteTable(result);
            return null;
        }
        
        private void OnDeleteTableCompleted(object state) {
            if ((this.DeleteTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTableAsync() {
            this.DeleteTableAsync(null);
        }
        
        public void DeleteTableAsync(object userState) {
            if ((this.onBeginDeleteTableDelegate == null)) {
                this.onBeginDeleteTableDelegate = new BeginOperationDelegate(this.OnBeginDeleteTable);
            }
            if ((this.onEndDeleteTableDelegate == null)) {
                this.onEndDeleteTableDelegate = new EndOperationDelegate(this.OnEndDeleteTable);
            }
            if ((this.onDeleteTableCompletedDelegate == null)) {
                this.onDeleteTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTableCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTableDelegate, null, this.onEndDeleteTableDelegate, this.onDeleteTableCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override UI.FolderServiceClient.IFolderWCF CreateChannel() {
            return new FolderWCFClientChannel(this);
        }
        
        private class FolderWCFClientChannel : ChannelBase<UI.FolderServiceClient.IFolderWCF>, UI.FolderServiceClient.IFolderWCF {
            
            public FolderWCFClientChannel(System.ServiceModel.ClientBase<UI.FolderServiceClient.IFolderWCF> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSaveData(string path, int pID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = path;
                _args[1] = pID;
                System.IAsyncResult _result = base.BeginInvoke("SaveData", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveData(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveData", _args, result);
            }
            
            public System.IAsyncResult BeginLoadData(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("LoadData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<UI.FolderServiceClient.FolderInfo> EndLoadData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<UI.FolderServiceClient.FolderInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<UI.FolderServiceClient.FolderInfo>)(base.EndInvoke("LoadData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteTable(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DeleteTable", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteTable(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteTable", _args, result);
            }
        }
    }
}
